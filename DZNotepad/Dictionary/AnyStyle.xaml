<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="AnyStyle">
        <Setter Property="Control.Background" Value="{DynamicResource anyBackgroundVal}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource anyForegroundVal}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource anyBorderBrushVal}" />
        <Setter Property="Control.FontFamily" Value="{DynamicResource anyFontFamilyVal}" />
        <Setter Property="Control.FontSize" Value="{DynamicResource anyFontSizeVal}" />
        <Setter Property="Control.FontStyle" Value="{DynamicResource anyFontStyleVal}" />
        <Setter Property="Control.FontWeight" Value="{DynamicResource anyFontWeightVal}" />
    </Style>
    <Style x:Key="AnyStyleTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Control.Background" Value="{DynamicResource anyTBBackgroundVal}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource anyTBForegroundVal}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource anyTBBorderBrushVal}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource anyTBSelectionBrushVal}" />
        <Setter Property="CaretBrush" Value="{DynamicResource anyTBCaretBrushVal}" />
        <Setter Property="Control.FontFamily" Value="{DynamicResource anyTBFontFamilyVal}" />
        <Setter Property="Control.FontSize" Value="{DynamicResource anyTBFontSizeVal}" />
        <Setter Property="Control.FontStyle" Value="{DynamicResource anyTBFontStyleVal}" />
        <Setter Property="Control.FontWeight" Value="{DynamicResource anyTBFontWeightVal}" />
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="{DynamicResource anyTBCornerVal}" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="AnyStyleButton" TargetType="{x:Type Button}">
        <Setter Property="Control.Foreground" Value="{DynamicResource anyButtonForegroundVal}" />
        <Setter Property="Control.FontFamily" Value="{DynamicResource anyButtonFontFamilyVal}" />
        <Setter Property="Control.FontSize" Value="{DynamicResource anyButtonFontSizeVal}" />
        <Setter Property="Control.FontStyle" Value="{DynamicResource anyButtonFontStyleVal}" />
        <Setter Property="Control.FontWeight" Value="{DynamicResource anyButtonFontWeightVal}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="borderZero" BorderThickness="1" Padding="1" Background="{DynamicResource anyButtonBackgroundVal}" BorderBrush="{DynamicResource anyButtonBorderBrushVal}" CornerRadius="{DynamicResource anyButtonCornerVal}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderZero" Property="Background" Value="{DynamicResource anyButtonMouseOverVal}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="borderZero" Property="Background" Value="{DynamicResource anyButtonPressedVal}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AnyStyleTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Control.Foreground" Value="{DynamicResource anyTabItemForegroundVal}" />
        <Setter Property="Control.FontFamily" Value="{DynamicResource anyTabItemFontFamilyVal}" />
        <Setter Property="Control.FontSize" Value="{DynamicResource anyTabItemFontSizeVal}" />
        <Setter Property="Control.FontStyle" Value="{DynamicResource anyTabItemFontStyleVal}" />
        <Setter Property="Control.FontWeight" Value="{DynamicResource anyTabItemFontWeightVal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0" Background="Transparent" BorderBrush="{DynamicResource anyTabItemBorderBrushVal}" BorderThickness="1,1,1,1" CornerRadius="{DynamicResource anyTabItemCornerVal}">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource anyTabItemBackgroundVal}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource anyTabItemBackgroundVal}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AnyStyleComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Control.Foreground" Value="{DynamicResource anyComboForegroundVal}" />
        <Setter Property="Control.FontFamily" Value="{DynamicResource anyComboFontFamilyVal}" />
        <Setter Property="Control.FontSize" Value="{DynamicResource anyComboFontSizeVal}" />
        <Setter Property="Control.FontStyle" Value="{DynamicResource anyComboFontStyleVal}" />
        <Setter Property="Control.FontWeight" Value="{DynamicResource anyComboFontWeightVal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="{DynamicResource anyComboCornerVal}" Background="{DynamicResource anyComboUnpressedVal}" BorderBrush="{DynamicResource anyComboBorderBrushVal}" BorderThickness="1" />
                                        <Border Grid.Column="0" CornerRadius="{DynamicResource anyComboCornerArrowVal}" Margin="1" Background="{DynamicResource anyComboBackgroundVal}" BorderBrush="{DynamicResource anyComboBorderBrushVal}" BorderThickness="0,0,1,0" />
                                        <Path x:Name="Arrow" Grid.Column="1" Fill="{DynamicResource anyComboArrowVal}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource anyComboMouseOverVal}" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource anyComboPressedVal}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid Background="{DynamicResource anyComboPopupBackVal}" Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border BorderBrush="{DynamicResource anyComboPopupBorderVal}" x:Name="DropDownBorder" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
</ResourceDictionary>